name: Build and Upload Function Code

on:
  workflow_dispatch: {}
  push:
    paths:
      - '.github/workflows/functions.yml'
      - 'functions/**'

env:
  AWS_REGION: "us-east-1"

jobs:
  build:
    name: Build and Upload
    runs-on: ubuntu-20.04
    environment: dev
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: âš¡ Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          # target (don't want target/lambda?)
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Assume Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Add Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Cargo Lambda
        uses: actions-rs/toolchain@v1
        with:
          command: install
          args: cargo-lambda
          toolchain: stable

      - name: Build
        working-directory: functions
        run: ./build.sh

      # - name: Upload Artifacts
      #   working-directory: functions
      #   run: upload.sh -b ${{ secrets.BUCKET }} -p ${{ secrets.PREFIX }}
        
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   environment: Dev
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2

  #     - name: Assume Role
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         role-to-assume: ${{ secrets.ROLE }}
  #         role-session-name: GitHub-Action-Role
  #         aws-region: ${{ env.AWS_REGION }}

  #     - run: |
  #         echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
  #         commit_hash=`git rev-parse HEAD`
  #         aws deploy create-deployment --application-name CodeDeployAppNameWithASG --deployment-group-name CodeDeployGroupName --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures