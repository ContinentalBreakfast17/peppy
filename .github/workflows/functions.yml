name: functions

on:
  workflow_dispatch:
    environment:
      description: 'Environment to run plan against'
      type: environment
      required: true
  push:
    paths:
      - '.github/workflows/functions.yml'
      - 'functions/**'

env:
  AWS_REGION: "us-east-1"

jobs:
  functions:
    name: Lambda Functions
    runs-on: ubuntu-20.04
    environment: ${{ inputs.environment || 'dev' }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Add Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Add Cargo Lambda
        run: |
          pip install cargo-lambda
          cargo lambda --version

      - name: Add ScCache
        uses: supplypike/setup-bin@v1
        with:
          uri: 'https://github.com/mozilla/sccache/releases/download/v0.3.1/sccache-dist-v0.3.1-x86_64-unknown-linux-musl.tar.gz'
          name: 'sccache'
          version: '0.3.1'

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cache/sccache
            functions/*/target
            !functions/*/target/lambda
          key: ${{ runner.os }}-cargo-${{ hashFiles('functions/**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('functions/**/Cargo.lock') }}
            ${{ runner.os }}-cargo

      - name: Chmod
        run: |
          chmod +x /opt/hostedtoolcache/sccache/0.3.1/x64/sccache-dist-v0.3.1-x86_64-unknown-linux-musl/sccache-dist

      - name: Build
        working-directory: functions
        run: ./build.sh
        env:
          RUSTC_WRAPPER: /opt/hostedtoolcache/sccache/0.3.1/x64/sccache-dist-v0.3.1-x86_64-unknown-linux-musl/sccache-dist

      - name: Archive Binaries
        uses: actions/upload-artifact@v3
        with:
          name: lambda-zips
          retention-days: 1
          path: |
            functions/*/target/lambda/**.zip

      - name: Assume Role
        uses: aws-actions/configure-aws-credentials@v1
        if: github.event_name == 'workflow_call'
        with:
          role-to-assume: ${{ secrets.ROLE }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload
        if: github.event_name == 'workflow_call'
        working-directory: functions
        run: ./upload.sh -b ${{ secrets.BUCKET }} -p ${{ secrets.PREFIX }} -d
