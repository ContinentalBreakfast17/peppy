name: functions

on:
  workflow_dispatch: {}
  push:
    paths:
      - '.github/workflows/functions.yml'
      - 'functions/**'

env:
  AWS_REGION: "us-east-1"

jobs:
  build:
    name: Build and Upload
    runs-on: ubuntu-20.04
    environment: dev
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: âš¡ Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cache/sccache
            functions/healthcheck/target
          # key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          key: ${{ runner.os }}-cargo-${{ hashFiles('functions/healthcheck/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('functions/healthcheck/Cargo.lock') }}
            ${{ runner.os }}-cargo-

      - name: Assume Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Add Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-gnu
          override: true

      # - name: Install ScCache
      #   run: cargo install sccache

      - name: Build - Healthcheck
        uses: actions-rs/cargo@v1
        # working-directory: functions/healthcheck
        with:
          use-cross: true
          command: build
          args: --manifest-path functions/healthcheck/Cargo.toml --release --target aarch64-unknown-linux-gnu
        # build --release --target x86_64-unknown-linux-musl

      # - name: Build
      #   working-directory: functions
      #   env:
      #     RUSTC_WRAPPER: sccache
      #   run: ./build.sh

      # - name: Upload Artifacts
      #   working-directory: functions
      #   run: upload.sh -b ${{ secrets.BUCKET }} -p ${{ secrets.PREFIX }}
